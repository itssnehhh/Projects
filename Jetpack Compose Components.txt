Dialog in Jetpack Compose

@Composable
fun AddThoughtDialog(onDismiss: () -> Unit, onAddThought: (Thought) -> Unit) {
    var thoughtType by remember { mutableStateOf(ThoughtType.DAILY_THOUGHT) }
    var content by remember { mutableStateOf("") }

    AlertDialog(
        onDismissRequest = onDismiss,
        title = { Text("Add Thought") },
        text = {
            Column {
                RadioButtonGroup(
                    options = ThoughtType.values().toList(),
                    selectedOption = thoughtType,
                    onSelectedOptionChange = { thoughtType = it }
                )
                TextField(
                    value = content,
                    onValueChange = { content = it },
                    label = { Text("Content") },
                    modifier = Modifier.padding(top = 16.dp)
                )
            }
        },
        confirmButton = {
            Button(onClick = {
                onAddThought(Thought(thoughtType, content))
            }) {
                Text("Add")
            }
        },
        dismissButton = {
            Button(onClick = onDismiss) {
                Text("Cancel")
            }
        }
    )
}

@Composable
fun <T> RadioButtonGroup(options: List<T>, selectedOption: T, onSelectedOptionChange: (T) -> Unit) {
    Column {
        options.forEach { option ->
            Row(
                verticalAlignment = Alignment.CenterVertically,
                modifier = Modifier
                    .padding(vertical = 4.dp)
            ) {
                RadioButton(
                    selected = (option == selectedOption),
                    onClick = { onSelectedOptionChange(option) }
                )
                Text(text = option.toString(), modifier = Modifier.padding(start = 8.dp))
            }
        }
    }
}


Spinner in Jetpack Compose

package com.example.cpmyjournal.view.screen

import androidx.compose.foundation.clickable
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.width
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Modifier
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.cpmyjournal.Thought
import com.example.cpmyjournal.ThoughtType

@Composable
fun AddThoughtDialog(onDismiss: () -> Unit, onAddThought: (Thought) -> Unit) {
    var selectedType by remember { mutableStateOf(ThoughtType.DAILY_THOUGHT) }
    var content by remember { mutableStateOf("") }
    var expanded by remember { mutableStateOf(false) }

    AlertDialog(
        onDismissRequest = onDismiss,
        title = { Text("Add Thought") },
        text = {
            Column {
                Box {
                    Text(
                        text = selectedType.toString(),
                        modifier = Modifier
                            .clickable { expanded = true }
                            .padding(16.dp)
                            .width(200.dp)
                    )
                    DropdownMenu(
                        expanded = expanded,
                        onDismissRequest = { expanded = false }
                    ) {
                        ThoughtType.values().forEach { type ->
                            DropdownMenuItem(
                                text = { Text(text = type.toString(), fontSize = 16.sp) },
                                onClick = {
                                    selectedType = type
                                    expanded = false
                                }
                            )
                        }
                    }
                }
                TextField(
                    value = content,
                    onValueChange = { content = it },
                    label = { Text("Content") },
                    modifier = Modifier.padding(top = 16.dp)
                )
            }
        },
        confirmButton = {
            Button(onClick = {
                onAddThought(Thought(selectedType, content))
            }) {
                Text("Add")
            }
        },
        dismissButton = {
            Button(onClick = onDismiss) {
                Text("Cancel")
            }
        }
    )
}
