service cloud.firestore {
  match /databases/{database}/documents {
    
    // Security rules for users collection
    match /users/{userId} {
      // Allow read and write only if the request is authenticated and matches the userId
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Security rules for chat rooms collection
    match /chatrooms/{chatRoomId} {
      // Allow read only if the request is authenticated and the user is a participant
      allow read: if request.auth != null && resource.data.participants[request.auth.uid] != null;
      
      // Allow write (create messages) only if the request is authenticated and the user is a participant
      allow create: if request.auth != null && resource.data.participants[request.auth.uid] != null;
      
      // Allow updating the last message only if the request is authenticated and the user is a participant
      allow update: if request.auth != null && resource.data.participants[request.auth.uid] != null;
      
      // Allow deleting messages only by the sender or the chat room owner
      allow delete: if request.auth != null && request.auth.uid == resource.data.owner;
    }

    // Security rules for groups collection
    match /groups/{groupId} {
      // Allow read only if the request is authenticated and the user is a member of the group
      allow read: if request.auth != null && request.resource.data.users[request.auth.uid] != null;
      
      // Allow write (create messages) only if the request is authenticated and the user is a member of the group
      allow create: if request.auth != null && request.resource.data.users[request.auth.uid] != null;
      
      // Allow updating group details only by the group owner
      allow update: if request.auth != null && request.resource.data.createdBy == request.auth.uid;
      
      // Allow deleting the group only by the group owner
      allow delete: if request.auth != null && request.resource.data.createdBy == request.auth.uid;
    }

    // Security rules for group messages subcollection
    match /groups/{groupId}/messages/{messageId} {
      // Allow read only if the request is authenticated and the user is a member of the group
      allow read: if request.auth != null && resource.data.groupId == groupId && resource.data.users[request.auth.uid] != null;
      
      // Allow write (create messages) only if the request is authenticated and the user is a member of the group
      allow create: if request.auth != null && resource.data.groupId == groupId && resource.data.users[request.auth.uid] != null;
      
      // Allow deleting messages only by the sender or the group owner
      allow delete: if request.auth != null && (request.auth.uid == resource.data.senderId || request.resource.data.createdBy == request.auth.uid);
    }
  }
}
