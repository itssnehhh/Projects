service cloud.firestore {
  match /databases/{database}/documents {
    
    // Rules for user-specific data
    match /users/{userId} {
      // Allow read and write access only if the user is authenticated and is the owner of the document
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Rules for chat messages
    match /chats/{chatId}/messages/{messageId} {
      // Allow read and write access if the user is authenticated
      allow read, write: if request.auth != null && (isParticipant(chatId, request.auth.uid) || isGroupParticipant(chatId, request.auth.uid));
    }
    
    // Function to check if the user is a participant in a chat
    function isParticipant(chatId, userId) {
      return exists(/databases/$(database)/documents/chats/$(chatId)/participants/$(userId));
    }

    // Function to check if the user is a participant in a group chat
    function isGroupParticipant(chatId, userId) {
      return exists(/databases/$(database)/documents/chats/$(chatId)/groups/$(userId));
    }

    // Rules for other documents
    // Add more rules as needed for other collections and documents
  }
}
